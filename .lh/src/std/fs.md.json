{
    "sourceFile": "src/std/fs.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1632319257508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1632319265017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,22 @@\n # fs\n \n ## Open file and write to it\n-```\n+```rust\n use std::fs::File;\n+fn read_username_from_file() -> Result<String, io::Error> {\n+    let f = File::open(\"helo.txt\");\n+    let mut f = match f {\n+        Ok(file) => file,\n+        // Return early if there's an error\n+        Err(e) => return Err(e),\n+    };\n \n+    let mut s = String::new();\n \n+    // Because last call it returns <String, io::Error>\n+    match f.read_to_string(&mut s) {\n+        Ok(_) => Ok(s),\n+        Err(e) => Err(e),\n+    }\n+}\n ```\n\\ No newline at end of file\n"
                },
                {
                    "date": 1632319423857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,5 +18,17 @@\n         Ok(_) => Ok(s),\n         Err(e) => Err(e),\n     }\n }\n+```\n+```rust\n+use std::fs::File;\n+use std::io;\n+use std::io::Read;\n+\n+fn read_username_from_file() -> Result<String, io::Error> {\n+    let mut f = File::open(\"hello.txt\")?;\n+    let mut s = String::new();\n+    f.read_to_string(&mut s)?;\n+    Ok(s)\n+}\n ```\n\\ No newline at end of file\n"
                }
            ],
            "date": 1632319257508,
            "name": "Commit-0",
            "content": "# fs\n\n## Open file and write to it\n```\nuse std::fs::File;\n\n\n```"
        }
    ]
}